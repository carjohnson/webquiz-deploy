{"version":3,"file":"extensions_dicom-pdf_src_viewports_OHIFCornerstonePdfViewport_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAMA;AAAA;AA1DA;AAGA;AAAA;AAyDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif%5Cextensions%5Cdicom-pdf%5Csrc%5Cviewports%5COHIFCornerstonePdfViewport.tsx","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif%5Cextensions%5Cdicom-pdf%5Csrc%5Cviewports%5COHIFCornerstonePdfViewport.css","webpack:///../../../extensions/dicom-pdf/src/viewports/OHIFCornerstonePdfViewport.css?7b04"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useViewportRef } from '@ohif/core';\r\nimport './OHIFCornerstonePdfViewport.css';\r\n\r\nfunction OHIFCornerstonePdfViewport({ displaySets, viewportId = 'pdf-viewport' }) {\r\n  const [url, setUrl] = useState(null);\r\n  const viewportElementRef = useRef(null);\r\n  const viewportRef = useViewportRef(viewportId);\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('drag', makePdfDropTarget);\r\n    return function cleanup() {\r\n      document.body.removeEventListener('drag', makePdfDropTarget);\r\n      viewportRef.unregister();\r\n    };\r\n  }, []);\r\n\r\n  const [style, setStyle] = useState('pdf-yes-click');\r\n\r\n  const makePdfScrollable = () => {\r\n    setStyle('pdf-yes-click');\r\n  };\r\n\r\n  const makePdfDropTarget = () => {\r\n    setStyle('pdf-no-click');\r\n  };\r\n\r\n  if (displaySets && displaySets.length > 1) {\r\n    throw new Error(\r\n      'OHIFCornerstonePdfViewport: only one display set is supported for dicom pdf right now'\r\n    );\r\n  }\r\n\r\n  const { renderedUrl } = displaySets[0];\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      setUrl(await renderedUrl);\r\n    };\r\n\r\n    load();\r\n  }, [renderedUrl]);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-primary-black h-full w-full text-white\"\r\n      onClick={makePdfScrollable}\r\n      ref={el => {\r\n        viewportElementRef.current = el;\r\n        if (el) viewportRef.register(el);\r\n      }}\r\n      data-viewport-id={viewportId}\r\n    >\r\n      <object\r\n        data={url}\r\n        type=\"application/pdf\"\r\n        className={style}\r\n      >\r\n        <div>No online PDF viewer installed</div>\r\n      </object>\r\n    </div>\r\n  );\r\n}\r\n\r\nOHIFCornerstonePdfViewport.propTypes = {\r\n  displaySets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  viewportId: PropTypes.string,\r\n};\r\n\r\nexport default OHIFCornerstonePdfViewport;\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.pdf-no-click {\r\n  pointer-events: none;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.pdf-yes-click {\r\n  pointer-events: auto;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../extensions/dicom-pdf/src/viewports/OHIFCornerstonePdfViewport.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,WAAW;AACb\",\"sourcesContent\":[\".pdf-no-click {\\r\\n  pointer-events: none;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.pdf-yes-click {\\r\\n  pointer-events: auto;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!./OHIFCornerstonePdfViewport.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!./OHIFCornerstonePdfViewport.css\",\n      function () {\n        content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!./OHIFCornerstonePdfViewport.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};"],"names":[],"sourceRoot":""}