{"version":3,"file":"extensions_dicom-video_src_viewports_OHIFCornerstoneVideoViewport_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAMA;AAAA;AA7CA;AA+CA;AACA;AACA;AAEA;AAAA;AAAA","sources":["file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif%5Cextensions%5Cdicom-video%5Csrc%5Cviewports%5COHIFCornerstoneVideoViewport.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction OHIFCornerstoneVideoViewport({ displaySets }) {\r\n  if (displaySets && displaySets.length > 1) {\r\n    throw new Error(\r\n      'OHIFCornerstoneVideoViewport: only one display set is supported for dicom video right now'\r\n    );\r\n  }\r\n\r\n  const { videoUrl } = displaySets[0];\r\n  const mimeType = 'video/mp4';\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      setUrl(await videoUrl);\r\n    };\r\n\r\n    load();\r\n  }, [videoUrl]);\r\n\r\n  // Need to copies of the source to fix a firefox bug\r\n  return (\r\n    <div className=\"bg-primary-black h-full w-full\">\r\n      <video\r\n        src={url}\r\n        controls\r\n        controlsList=\"nodownload\"\r\n        preload=\"auto\"\r\n        className=\"h-full w-full\"\r\n        crossOrigin=\"anonymous\"\r\n      >\r\n        <source\r\n          src={url}\r\n          type={mimeType}\r\n        />\r\n        <source\r\n          src={url}\r\n          type={mimeType}\r\n        />\r\n        Video src/type not supported:{' '}\r\n        <a href={url}>\r\n          {url} of type {mimeType}\r\n        </a>\r\n      </video>\r\n    </div>\r\n  );\r\n}\r\n\r\nOHIFCornerstoneVideoViewport.propTypes = {\r\n  displaySets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default OHIFCornerstoneVideoViewport;\r\n"],"names":[],"sourceRoot":""}