{"version":3,"file":"ohif-extensions_ohif-extension-webquiz_src_index_tsx.js","mappings":";;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxhCA;AACA;AAKA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAIA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAKA;AAKA;AAKA;AACA;AAIA;AAIA;AAIA;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AApNA;AAKA;AAAA;AAkNA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvOA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAIA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA","sources":["file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Carithmetic%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cconstants.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cprobability%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cstatistics%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Ctrigonometric%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cunit%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cnode_modules%5Cmath.js%5Clib%5Cutils%5Cindex.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5CCreateCustomIcon.tsx","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5CQuestions%5CbtnComponent.tsx","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5CWebQuizSidePanelComponent.tsx","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5Cid.js","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5Cindex.tsx","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Csrc%5Cutils%5Cutil_segmentation.ts","file:///D:%5CUsers%5Ccjohnson%5CGitRepositories%5COHIF-Viewer-Dev%5Cohif-extensions%5Cohif-extension-webquiz%5Cassets%5CBainesTransparentTiny.png"],"sourcesContent":["module.exports= require('./lib');\n","module.exports = {\r\n\r\n    ceil: function(val) {\r\n        return Math.ceil(val / 10) * 10;\r\n    },\r\n\r\n    round: function(n) {\r\n        return Math.round(n);\r\n    },\r\n\r\n    fround: function(n) {\r\n        return Math.fround(n)\r\n    },\r\n\r\n    /**\r\n     * Returns the largest integer less than or equal to the given number.\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    floor: function(n) {\r\n        return Math.floor(n);\r\n    },\r\n\r\n    sign: function(n) {\r\n        return Math.sign(n);\r\n    },\r\n\r\n    abs: function(n) {\r\n        return Math.abs(n)\r\n    },\r\n\r\n    imul: function(a, b) {\r\n        return Math.imul(a, b);\r\n    },\r\n\r\n    pow: function(base, exp) {\r\n        return Math.pow(base, exp);\r\n    },\r\n\r\n    square: function(val) {\r\n        return val * val;\r\n    },\r\n\r\n    cube: function(val) {\r\n        return val * val * val;\r\n    },\r\n\r\n    sqrt: function(n) {\r\n        return Math.sqrt(n);\r\n    },\r\n\r\n    cbrt: function (n) {\r\n        return Math.cbrt(n);\r\n    },\r\n\r\n    exp: function (n) {\r\n        return Math.exp(n);\r\n    },\r\n\r\n    expm1: function(n) {\r\n        return Math.expm1(n);\r\n    },\r\n\r\n    trunc: function(n) {\r\n        return Math.trunc(n);\r\n    },\r\n\r\n    greatestCommonDivisor: function gcd(x, y) {\r\n        var remainder = x % y;\r\n        if (remainder === 0) {\r\n            return y;\r\n        }\r\n\r\n        return gcd(y, remainder);\r\n    },\r\n\r\n    log: function (n) {\r\n        return Math.log(n);\r\n    },\r\n\r\n    log2: function (n) {\r\n        return Math.log2(n);\r\n    },\r\n\r\n    log10: function (n) {\r\n        return Math.log10(n);\r\n    },\r\n\r\n    log1p: function(n) {\r\n        return Math.log1p(n);\r\n    },\r\n\r\n    hypot: function(...arr) {\r\n        return Math.hypot(...arr);\r\n    }, \r\n\r\n    /**\r\n     * Performs ceil in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dCeil: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        console.log('dCeil', num, n, multiplyValue, Math.ceil(num / multiplyValue) * multiplyValue)\r\n        return Math.ceil(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs round in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dRound: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.round(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs floor in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dFloor: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.floor(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs trunc in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dTrunc: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.trunc(num * multiplyValue) / multiplyValue;\r\n    }\r\n\r\n};\r\n","/**\n * A constants class to maintain all the fixed variables.\n * @type {Object}\n */\nmodule.exports = Object.freeze({\n    /**\n     * Built-in constants.\n     */\n    PI: Math.PI,\n    E: Math.E,\n    LN10: Math.LN10,\n    LN2: Math.LN2,\n    LOG10E: Math.LOG10E,\n    LOG2E: Math.LOG2E,\n    SQRT1_2: Math.SQRT1_2,\n    SQRT2: Math.SQRT2,\n\n\n    /**\n     * Unit converter constants.\n     */\n    FEET_TO_INCHES_FACTOR:  12,\n    FEET_TO_METERS_FACTOR: 0.3048,\n    FEET_TO_MILES_FACTOR: 1 / 5280,\n    FEET_TO_YARDS_FACTOR: 1 / 3,\n    INCHES_TO_FEET_FACTOR: 1 / 12,\n    INCHES_TO_METERS_FACTOR: 0.0254,\n    INCHES_TO_MILES_FACTOR: 1 / 63360,\n    INCHES_TO_YARDS_FACTOR: 1 / 36,\n    MILES_TO_FEET_FACTOR: 5280,\n    MILES_TO_INCHES_FACTOR: 63360,\n    MILES_TO_METERS_FACTOR: 1609.344,\n    MILES_TO_YARDS_FACTOR: 1760,\n    YARDS_TO_INCHES_FACTOR: 36,\n    YARDS_TO_FEET_FACTOR: 3,\n    YARDS_TO_METERS_FACTOR: 0.9144,\n    YARDS_TO_MILES_FACTOR: 1 / 1760,\n    CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR: 9 / 5,\n    CELSIUS_TO_FAHRENEIT_FACTOR: 32\n\n\n});\n","module.exports = Object.assign({},\n    require('./utils'),\n    require('./statistics'),\n    require('./probability'),\n    require('./arithmetic'),\n    require('./unit'),\n    require('./trigonometric')\n);\n","module.exports = {\n\n    random: function() {\n        return Math.random();\n    },\n\n    randomElement: function(arr) {\n        return arr[Math.floor(Math.random() * arr.length)];\n    },\n\n    factorial: function(n) {\n        return n * (n-1);\n    }\n};\n","module.exports = {\n\n    minElement: function(arr) {\n        return Math.min.apply(null, arr);\n    },\n\n    maxElement: function(arr) {\n        return Math.max.apply(null, arr);\n    },\n\n    between: function (val, min, max) {\n        return min<=val==val<=max;\n    }\n}\n","module.exports = {\n// Trigonometric functions\n    sin: function (n) {\n        return Math.sin(n);\n    },\n\n    cos: function (n) {\n        return Math.cos(n);\n    },\n\n    tan: function (n) {\n        return Math.tan(n);\n    },\n\n    acos: function (n) {\n        return Math.acos(n);\n    },\n\n    asin: function (n) {\n        return Math.asin(n);\n    },\n\n    acosh: function (n) {\n        return Math.acosh(n);\n    },\n\n    atan: function (n) {\n        return Math.atan(n);\n    },\n\n    /**\n     * Arc tangent of two numbers. Both arguments are used to determine the quadrant of the result.\n     * @param y\n     * @param x\n     * @returns {number} an angle expressed in radians\n     */\n    atan2: function (y, x) {\n        return Math.atan2(y, x);\n    }\n\n};\n","var constants = require('../constants');\nmodule.exports = {\n\n    // Unit converters\n    yardsToFeet: function(n) {\n        return n * constants.YARDS_TO_FEET_FACTOR;\n    },\n\n    feetToYards: function(n) {\n        return n * constants.FEET_TO_YARDS_FACTOR;\n    },\n\n    yardsToInches: function(n) {\n        return n * constants.YARDS_TO_INCHES_FACTOR;\n    },\n\n    inchesToYards: function(n) {\n        return constants.INCHES_TO_YARDS_FACTOR * n;\n    },\n\n    inchesToMiles: function(n) {\n        return constants.INCHES_TO_MILES_FACTOR * n;\n    },\n\n    feetToInches: function(n) {\n        return constants.FEET_TO_INCHES_FACTOR * n;\n    },\n\n    feetToMeters: function (n) {\n        return constants.FEET_TO_METERS_FACTOR * n;\n    },\n\n    feetToMiles: function(n) {\n        return constants.FEET_TO_MILES_FACTOR * n;\n    },\n\n    inchesToFeet: function(n) {\n        return constants.INCHES_TO_FEET_FACTOR * n;\n    },\n\n    inchesToMeters: function(n) {\n        return constants.INCHES_TO_METERS_FACTOR * n;\n    },\n\n    milesToYards: function(n) {\n        return constants.MILES_TO_YARDS_FACTOR * n;\n    },\n\n    milesToMeters: function(n) {\n        return constants.MILES_TO_METERS_FACTOR * n;\n    },\n\n    milesToInches: function(n) {\n        return constants.MILES_TO_INCHES_FACTOR * n;\n    },\n\n    milesToFeet: function(n) {\n        return constants.MILES_TO_FEET_FACTOR * n;\n    },\n\n    yardsToMiles: function(n) {\n        return constants.YARDS_TO_MILES_FACTOR * n;\n    },\n\n    yardsToMeters: function(n) {\n        return constants.YARDS_TO_METERS_FACTOR * n;\n    },\n\n    toFahrenheit: function(val) {\n        return val * constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR + constants.CELSIUS_TO_FAHRENEIT_FACTOR;\n    },\n\n    toCelsius: function(val) {\n        return (val - constants.CELSIUS_TO_FAHRENEIT_FACTOR) / constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR;\n    },\n\n};\n","module.exports = {\n    isPrime: function(n) {\n        for (var i = 2 ; i < n ; i++) {\n            if (n % i === 0) {\n                return false;\n            }\n        }\n        return n > 1;\n    },\n\n    isEven: function(n) {\n        return n % 2 === 0;\n    },\n\n    isOdd: function(n) {\n        return !this.isEven(n);\n    },\n\n    format: function(val, decimals) {\n        return ( val.toFixed(decimals) )/1;\n    },\n\n    dropFirstDigit: function(n) {\n        return Number(n.toString().substring(1));\n    },\n\n    dropLastDigit: function(n) {\n        return Number(n.toString().substring(0, n.toString().length-1));\n    },\n\n    dropDigit: function(n, pos) {\n        return Number(n.toString().substring(0, pos-1).concat(n.toString().substring(pos, n)));\n    }\n};\n","\r\nimport React from 'react';\r\nimport baineslogo from '../assets/BainesTransparentTiny.png';\r\n\r\ntype ImageIconProps = React.ImgHTMLAttributes<HTMLImageElement>;\r\n\r\n\r\nconst CreateCustomIcon = (Icons) => {\r\n//   console.log('📦 Icons keys:', Object.keys(Icons));   // for debug\r\n\r\n  const BaineslogoIcon = (props: ImageIconProps) => {\r\n    const { width = 22, height = 22, ...rest } = props;\r\n    return <img src={baineslogo} width={width} height={height} {...rest} />;\r\n  };\r\n\r\n  Icons.addIcon('baines-logo', BaineslogoIcon);\r\n\r\n};\r\n\r\nexport default CreateCustomIcon;\r\n","import React from \"react\";\r\nimport { Button } from '@ohif/ui-next';\r\nimport { data } from 'dcmjs';\r\n\r\nimport * as cornerstoneTools from \"@cornerstonejs/tools\";\r\nimport { getEnabledElement } from '@cornerstonejs/core';\r\nimport { Buffer } from 'buffer';\r\nimport { getGeneratedSegmentation } from \"../utils/util_segmentation\";\r\n\r\nconst { datasetToDict } = data;\r\n\r\n\r\nfunction BtnComponent( { measurementData, segmentationData, refreshData, setIsSaved }) {\r\n\r\n \r\n  const handleUploadAnnotationsClick = () => {\r\n\r\n    // refresh the annotation data before posting\r\n    // segmentation data is refreshed automatically through segmentation service\r\n    const [freshMeasurementData, freshVolumeData] = refreshData();\r\n    console.log('Number of measurements: ', freshMeasurementData.length);\r\n    console.log(\"Number of segments:\", freshVolumeData.length)\r\n\r\n    window.parent.postMessage({\r\n      type: 'annotations', \r\n      measurementdata: freshMeasurementData,\r\n      segmentationdata: freshVolumeData\r\n    }, '*');\r\n    setIsSaved(true);\r\n  }\r\n\r\n\r\n  const handleUploadSegmentationsClick = async () => {\r\n    const [, , freshSegmentationData] = refreshData();\r\n    const selectedId = freshSegmentationData[0]?.segmentationId;\r\n\r\n    const currentViewports = cornerstoneTools.utilities.getAllViewportIds?.() || [getEnabledElement()?.viewport?.id];\r\n    const state = { segmentationId: selectedId, viewportIds: currentViewports };\r\n    const result = await getGeneratedSegmentation(state);\r\n\r\n    if (!result?.dataset) {\r\n      console.error(\"No dataset generated.\");\r\n      return;\r\n    }\r\n\r\n    uploadDICOMData(result.dataset, `segmentation-${Date.now()}.dcm`);\r\n};\r\n\r\nconst uploadDICOMData = ( dataset, filename )  => {\r\n  try {\r\n    const buffer = Buffer.from(datasetToDict(dataset).write());\r\n    const blob = new Blob([buffer], { type: \"application/dicom\" });\r\n\r\n      // Send blob to parent app\r\n    window.parent.postMessage(\r\n      {\r\n        type: \"SEGMENTATION_UPLOAD\",\r\n        filename,\r\n        payload: blob\r\n      },\r\n      \"*\"\r\n    );\r\n\r\n    console.log(\"📤 Segmentation message posted to parent window.\");\r\n  } catch (error) {\r\n    console.error(\"❌ Failed to post segmentation:\", error);\r\n  }\r\n\r\n}\r\n\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <Button onClick={handleUploadSegmentationsClick}>Upload Segmentations</Button>\r\n        <br/><br/>\r\n        <Button onClick={handleUploadAnnotationsClick}>Post</Button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default BtnComponent\r\n","import React, { useEffect, useState } from 'react';\r\nimport { sqrt } from 'math.js'\r\nimport BtnComponent from './Questions/btnComponent';\r\nimport { useSystem } from '@ohif/core';\r\n\r\nimport * as cornerstone from '@cornerstonejs/core';\r\nimport * as cornerstoneTools from '@cornerstonejs/tools';\r\nimport { annotation } from '@cornerstonejs/tools';\r\n\r\n\r\n/**\r\n *  Creating a React component to be used as a side panel in OHIF.\r\n *  Also performs a simple div that uses Math.js to output the square root.\r\n */\r\n\r\n\r\nfunction WebQuizSidePanelComponent() {\r\n    // set up useEffect hook to manage gathering all data from services\r\n    //  as the other components may be updating asynchronously and this\r\n    //  component needs to be subscribed to those updates\r\n\r\n    const { servicesManager } = useSystem();\r\n    const { segmentationService } = servicesManager.services;\r\n    \r\n    const [segmentationData, setSegmentationData] = useState([]);\r\n    const [volumeData, setVolumeData] = useState([]);\r\n    const [annotationData, setAnnotationData] = useState([]);\r\n    const [isSaved, setIsSaved] = useState(true);\r\n\r\n\r\n\r\n    type AnnotationStats = Record<string, Record<string, unknown>>;     // generic for capture of cachedStats object\r\n\r\n\r\n    // Annotations listeners\r\n    useEffect(() => {\r\n        const handleAnnotationChange = () => {\r\n            const lo_annotationStats = getAnnotationsStats();\r\n            setAnnotationData(lo_annotationStats);\r\n\r\n            ////// for debug /////\r\n            // const lengths = lo_annotationStats.flatMap((statsObj) => \r\n            //     Object.values(statsObj)\r\n            //         .filter((stat): stat is { length: number } => typeof stat === 'object' && stat !== null && 'length' in stat)\r\n            //         .map((stat) => stat.length)\r\n            //     );\r\n\r\n            // console.log(\"LENGTHS ===>\", lengths);\r\n        } ;\r\n\r\n        // Register listeners\r\n        // cornerstone.eventTarget.addEventListener(cornerstoneTools.Enums.Events.ANNOTATION_ADDED, handleAnnotationChange);\r\n        cornerstone.eventTarget.addEventListener(cornerstoneTools.Enums.Events.ANNOTATION_MODIFIED, handleAnnotationChange);\r\n        cornerstone.eventTarget.addEventListener(cornerstoneTools.Enums.Events.ANNOTATION_REMOVED, handleAnnotationChange);\r\n        cornerstone.eventTarget.addEventListener(cornerstoneTools.Enums.Events.ANNOTATION_COMPLETED, handleAnnotationChange);\r\n\r\n\r\n        // Cleanup on unmount\r\n        return() => {\r\n            // cornerstone.eventTarget.removeEventListener(cornerstoneTools.Enums.Events.ANNOTATION_ADDED, handleAnnotationChange);\r\n            cornerstone.eventTarget.removeEventListener(cornerstoneTools.Enums.Events.ANNOTATION_MODIFIED, handleAnnotationChange);\r\n            cornerstone.eventTarget.removeEventListener(cornerstoneTools.Enums.Events.ANNOTATION_REMOVED, handleAnnotationChange);\r\n            cornerstone.eventTarget.removeEventListener(cornerstoneTools.Enums.Events.ANNOTATION_COMPLETED, handleAnnotationChange);\r\n        }\r\n    }, [] );\r\n\r\n    //=====================\r\n    // Segmentation listener\r\n\r\n\r\n    // don't rely on segmentationService. \r\n    // These useEffects are tapping into the events for a more immediate response\r\n    // useEffect(() => {\r\n    //     const lo_allVolumes = getSegmentationStats();\r\n    //     setVolumeData(lo_allVolumes);\r\n    //     console.table(lo_allVolumes);\r\n    //     }, [segmentationService]);\r\n    // Refactored ... ===>\r\n    useEffect(() => {\r\n        const handleSegmentationChange = () => {\r\n            const [lo_segmentations, lo_allVolumes] = getSegmentationStats();\r\n            setVolumeData(lo_allVolumes);\r\n            console.table(lo_allVolumes);\r\n        };\r\n\r\n        cornerstone.eventTarget.addEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_ADDED,\r\n            handleSegmentationChange\r\n        );\r\n\r\n        cornerstone.eventTarget.addEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_DELETED,\r\n            handleSegmentationChange\r\n        );\r\n\r\n        cornerstone.eventTarget.addEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_MODIFIED,\r\n            handleSegmentationChange\r\n        );\r\n\r\n        cornerstone.eventTarget.addEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_DATA_MODIFIED,\r\n            handleSegmentationChange\r\n        );\r\n\r\n        return () => {\r\n            cornerstone.eventTarget.removeEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_ADDED,\r\n            handleSegmentationChange\r\n            );\r\n            cornerstone.eventTarget.removeEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_DELETED,\r\n            handleSegmentationChange\r\n            );\r\n            cornerstone.eventTarget.removeEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_MODIFIED,\r\n            handleSegmentationChange\r\n            );\r\n            cornerstone.eventTarget.removeEventListener(\r\n            cornerstoneTools.Enums.Events.SEGMENTATION_DATA_MODIFIED,\r\n            handleSegmentationChange\r\n            );\r\n        };\r\n    }, []);\r\n\r\n    //=====================\r\n    // watch for changes to the state properties\r\n    useEffect(() => {\r\n        if (annotationData.length > 0) {\r\n            setIsSaved(false);\r\n            // console.log(' Annotation Change');\r\n        }\r\n    }, [annotationData]);\r\n\r\n    useEffect(() => {\r\n        if (volumeData.length > 0) {\r\n            setIsSaved(false)\r\n            // console.log(' Volume Change');\r\n        }\r\n    }, [volumeData]);\r\n\r\n    useEffect(() => {\r\n        if (segmentationData.length > 0) {\r\n            setIsSaved(false)\r\n            // console.log(' Volume Change');\r\n        }\r\n    }, [segmentationData]);\r\n\r\n\r\n    ////////////////////////////////////////////\r\n    //=====================\r\n    // helper functions\r\n    //=====================\r\n    ////////////////////////////////////////////\r\n\r\n    //=====================\r\n    // function to get list of all cached annotation stats\r\n    const getAnnotationsStats = (): AnnotationStats[] => {\r\n        const lo_annotationStats: AnnotationStats[] = [];\r\n        const allAnnotations = annotation.state.getAllAnnotations();\r\n\r\n        allAnnotations.forEach((ann, index) => {\r\n            const stats = ann.data?.cachedStats as AnnotationStats;\r\n            if (stats && Object.keys(stats).length > 0) {\r\n                lo_annotationStats.push(stats);\r\n                // console.log(\"ANNOTATION Tool ===>\", ` Annotation ${index}:`, ann.data.cachedStats);\r\n            }\r\n        });\r\n\r\n        return lo_annotationStats;\r\n    };\r\n\r\n    //=====================\r\n    // function to get the list of objects holding segmentations and\r\n    //  extract volume data\r\n    const getSegmentationStats = () => {\r\n    const lo_segmentations = segmentationService.getSegmentations();\r\n    const lo_allVolumes = [];\r\n\r\n    lo_segmentations.forEach((segmentation, segIndex) => {\r\n        const segments = segmentation.segments;\r\n\r\n        Object.keys(segments).forEach((segmentKey) => {\r\n        const segment = segments[segmentKey];\r\n        const volume = segment?.cachedStats?.namedStats?.volume?.value;\r\n\r\n        if (volume !== undefined) {\r\n            lo_allVolumes.push({\r\n            segmentation: segIndex + 1,\r\n            segment: segmentKey,\r\n            volume,\r\n            });\r\n        }\r\n        });\r\n    });\r\n    return [lo_segmentations, lo_allVolumes];\r\n    };\r\n\r\n    //=====================\r\n    const refreshData = () => {\r\n        const lo_annotationStats = getAnnotationsStats();\r\n        setAnnotationData(lo_annotationStats);\r\n        const [lo_segmentations, lo_allVolumes] = getSegmentationStats();\r\n        setVolumeData(lo_allVolumes);\r\n        setSegmentationData(lo_segmentations);\r\n        console.table(lo_allVolumes);\r\n        return [lo_annotationStats, lo_allVolumes, lo_segmentations]; // ensures stats are updated before continuing\r\n    };\r\n\r\n\r\n\r\n     ////////////////////////////////////////////\r\n    //=====================\r\n    // return\r\n    //=====================\r\n    ////////////////////////////////////////////\r\n    return (\r\n        <div className=\"text-white w-full text-center\">\r\n        {`Web Quiz version : ${sqrt(4)}`}\r\n        <BtnComponent\r\n            measurementData={annotationData}\r\n            segmentationData={segmentationData}\r\n            refreshData={refreshData}\r\n            setIsSaved={setIsSaved}\r\n        />\r\n        </div>\r\n    );    \r\n\r\n}\r\n\r\n\r\nexport default WebQuizSidePanelComponent;\r\n\r\n","import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import { id } from './id';\r\nimport WebQuizSidePanelComponent from './WebQuizSidePanelComponent';\r\nimport CreateCustomIcon from './CreateCustomIcon';\r\nimport { Icons } from '@ohif/ui-next';\r\n\r\nCreateCustomIcon(Icons);\r\n\r\n/**\r\n * You can remove any of the following modules if you don't need them.\r\n */\r\nexport default {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   * You ID can be anything you want, but it should be unique.\r\n   */\r\n  id,\r\n\r\n  /**\r\n   * Perform any pre-registration tasks here. This is called before the extension\r\n   * is registered. Usually we run tasks such as: configuring the libraries\r\n   * (e.g. cornerstone, cornerstoneTools, ...) or registering any services that\r\n   * this extension is providing.\r\n   */\r\n  preRegistration: ({ servicesManager, commandsManager, configuration = {} }) => {},\r\n  /**\r\n   * PanelModule should provide a list of panels that will be available in OHIF\r\n   * for Modes to consume and render. Each panel is defined by a {name,\r\n   * iconName, iconLabel, label, component} object. Example of a panel module\r\n   * is the StudyBrowserPanel that is provided by the default extension in OHIF.\r\n   */\r\n  getPanelModule: ({ servicesManager, commandsManager, extensionManager }) => {\r\n    // console.log('🧪 In Panel Module Is baines-logo in Icons?', 'baines-logo' in Icons);\r\n    return [\r\n      {\r\n        name: \"webquiz\",\r\n        iconName: 'baines-logo',\r\n        iconLabel: \"Web Quiz\",\r\n        label: \"Web Quiz\",\r\n        component: WebQuizSidePanelComponent\r\n      }\r\n    ]\r\n  },\r\n  /**\r\n   * ViewportModule should provide a list of viewports that will be available in OHIF\r\n   * for Modes to consume and use in the viewports. Each viewport is defined by\r\n   * {name, component} object. Example of a viewport module is the CornerstoneViewport\r\n   * that is provided by the Cornerstone extension in OHIF.\r\n   */\r\n  getViewportModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * ToolbarModule should provide a list of tool buttons that will be available in OHIF\r\n   * for Modes to consume and use in the toolbar. Each tool button is defined by\r\n   * {name, defaultComponent, clickHandler }. Examples include radioGroupIcons and\r\n   * splitButton toolButton that the default extension is providing.\r\n   */\r\n  getToolbarModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * LayoutTemplateMOdule should provide a list of layout templates that will be\r\n   * available in OHIF for Modes to consume and use to layout the viewer.\r\n   * Each layout template is defined by a { name, id, component}. Examples include\r\n   * the default layout template provided by the default extension which renders\r\n   * a Header, left and right sidebars, and a viewport section in the middle\r\n   * of the viewer.\r\n   */\r\n  getLayoutTemplateModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * SopClassHandlerModule should provide a list of sop class handlers that will be\r\n   * available in OHIF for Modes to consume and use to create displaySets from Series.\r\n   * Each sop class handler is defined by a { name, sopClassUids, getDisplaySetsFromSeries}.\r\n   * Examples include the default sop class handler provided by the default extension\r\n   */\r\n  getSopClassHandlerModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * HangingProtocolModule should provide a list of hanging protocols that will be\r\n   * available in OHIF for Modes to use to decide on the structure of the viewports\r\n   * and also the series that hung in the viewports. Each hanging protocol is defined by\r\n   * { name, protocols}. Examples include the default hanging protocol provided by\r\n   * the default extension that shows 2x2 viewports.\r\n   */\r\n  getHangingProtocolModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * CommandsModule should provide a list of commands that will be available in OHIF\r\n   * for Modes to consume and use in the viewports. Each command is defined by\r\n   * an object of { actions, definitions, defaultContext } where actions is an\r\n   * object of functions, definitions is an object of available commands, their\r\n   * options, and defaultContext is the default context for the command to run against.\r\n   */\r\n  getCommandsModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * ContextModule should provide a list of context that will be available in OHIF\r\n   * and will be provided to the Modes. A context is a state that is shared OHIF.\r\n   * Context is defined by an object of { name, context, provider }. Examples include\r\n   * the measurementTracking context provided by the measurementTracking extension.\r\n   */\r\n  getContextModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n  /**\r\n   * DataSourceModule should provide a list of data sources to be used in OHIF.\r\n   * DataSources can be used to map the external data formats to the OHIF's\r\n   * native format. DataSources are defined by an object of { name, type, createDataSource }.\r\n   */\r\n  getDataSourcesModule: ({ servicesManager, commandsManager, extensionManager }) => {},\r\n};\r\n","// Utility to convert the segmentation object obtained through OHIF segmentationService\r\n// This is modified code which  originated from example utility found in cornerstonejs github\r\n//          cornerstone3D/packages/adapters/examples/segmentationVolume/utils.ts\r\n\r\n\r\nimport * as cornerstone from \"@cornerstonejs/core\";\r\nimport * as cornerstoneTools from \"@cornerstonejs/tools\";\r\nimport * as cornerstoneAdapters from \"@cornerstonejs/adapters\";\r\nimport dcmjs from \"dcmjs\";\r\n\r\n\r\nconst { cache, imageLoader, metaData } = cornerstone;\r\nconst { segmentation: csToolsSegmentation } = cornerstoneTools;\r\nconst { downloadDICOMData } = cornerstoneAdapters.helpers;\r\nconst { Cornerstone3D } = cornerstoneAdapters.adaptersSEG;\r\n\r\n\r\n\r\nexport async function getGeneratedSegmentation(state) {\r\n  const { segmentationId, viewportIds } = state;\r\n  const segmentationIds = getSegmentationIds();\r\n  if (!segmentationIds.length) {\r\n    return null;\r\n  }\r\n\r\n  const segmentation = csToolsSegmentation.state.getSegmentation(segmentationId);\r\n  const { imageIds } = segmentation.representationData.Labelmap;\r\n  const segImages = imageIds.map(imageId => cache.getImage(imageId));\r\n  const referencedImages = segImages.map(image => cache.getImage(image.referencedImageId));\r\n\r\n  const labelmaps2D = [];\r\n  let z = 0;\r\n\r\n  for (const segImage of segImages) {\r\n    const segmentsOnLabelmap = new Set();\r\n    const pixelData = segImage.getPixelData();\r\n    const { rows, columns } = segImage;\r\n\r\n    for (let i = 0; i < pixelData.length; i++) {\r\n      const segment = pixelData[i];\r\n      if (segment !== 0) {\r\n        segmentsOnLabelmap.add(segment);\r\n      }\r\n    }\r\n\r\n    labelmaps2D[z++] = {\r\n      segmentsOnLabelmap: Array.from(segmentsOnLabelmap),\r\n      pixelData,\r\n      rows,\r\n      columns\r\n    };\r\n  }\r\n\r\n  const allSegmentsOnLabelmap = labelmaps2D.map(lm => lm.segmentsOnLabelmap);\r\n  const labelmap3D = {\r\n    segmentsOnLabelmap: Array.from(new Set(allSegmentsOnLabelmap.flat())),\r\n    metadata: [],\r\n    labelmaps2D\r\n  };\r\n\r\n  labelmap3D.segmentsOnLabelmap.forEach(segmentIndex => {\r\n    const color =\r\n        csToolsSegmentation.config.color.getSegmentIndexColor(\r\n            viewportIds[0],\r\n            segmentationId,\r\n            segmentIndex\r\n        ) || [255, 255, 255, 255]; // fallback RGBA\r\n\r\n    const RecommendedDisplayCIELabValue = dcmjs.data.Colors.rgb2DICOMLAB(\r\n        color.slice(0, 3).map(value => value / 255)\r\n        ).map(value => Math.round(value));\r\n\r\n    const segmentMetadata = {\r\n      SegmentNumber: segmentIndex.toString(),\r\n      SegmentLabel: `Segment ${segmentIndex}`,\r\n      SegmentAlgorithmType: \"MANUAL\",\r\n      SegmentAlgorithmName: \"OHIF Brush\",\r\n      RecommendedDisplayCIELabValue,\r\n      SegmentedPropertyCategoryCodeSequence: {\r\n        CodeValue: \"T-D0050\",\r\n        CodingSchemeDesignator: \"SRT\",\r\n        CodeMeaning: \"Tissue\"\r\n      },\r\n      SegmentedPropertyTypeCodeSequence: {\r\n        CodeValue: \"T-D0050\",\r\n        CodingSchemeDesignator: \"SRT\",\r\n        CodeMeaning: \"Tissue\"\r\n      }\r\n    };\r\n    labelmap3D.metadata[segmentIndex] = segmentMetadata;\r\n  });\r\n\r\n  return Cornerstone3D.Segmentation.generateSegmentation(\r\n    referencedImages,\r\n    labelmap3D,\r\n    metaData\r\n  );\r\n}\r\n\r\n\r\n\r\nexport function getSegmentationIds() {\r\n    return csToolsSegmentation.state\r\n        .getSegmentations()\r\n        .map(x => x.segmentationId);\r\n}\r\n","export default __webpack_public_path__ + \"assets/images/BainesTransparentTiny.png\";"],"names":[],"sourceRoot":""}